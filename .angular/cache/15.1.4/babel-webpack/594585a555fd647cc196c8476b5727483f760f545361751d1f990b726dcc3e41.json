{"ast":null,"code":"import { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { GIPHY_CONFIG } from \"../configs/giphy-config\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class HttpService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.giphyApi = GIPHY_CONFIG.endpoints;\n  }\n  searchGifs(searchTerms, options) {\n    const url = `${this.giphyApi.search}${GIPHY_CONFIG.apikey}`;\n    return this.httpClient.get(`${url}&q=${searchTerms}&limit=8`);\n  }\n  giphyUpload(fileData, tags) {\n    const url = `${this.giphyApi.upload}${GIPHY_CONFIG.apikey}`;\n    fileData[\"api_key\"] = GIPHY_CONFIG.apikey;\n    const formData = new FormData();\n    formData.append(\"api_key\", fileData.api_key);\n    formData.append(\"file\", fileData.file);\n    formData.append(\"filename\", fileData.name);\n    return this.httpClient.post(url, formData);\n  }\n  apiConvertToGifObservable(videoBuffer) {\n    return this.httpClient.post(\"/api/gif-encoder\", videoBuffer, {\n      responseType: \"blob\"\n    });\n  }\n  upoloadedGiphyFileIdToGifObject(id) {\n    const headers = new HttpHeaders({\n      Accept: \"image/gif\",\n      \"Content-Type\": \"image/gif\"\n    });\n    const url = `${this.giphyApi.getById.replace(\"%1\", id)}${GIPHY_CONFIG.apikey}`;\n    return this.httpClient.get(url);\n  }\n}\nHttpService.ɵfac = function HttpService_Factory(t) {\n  return new (t || HttpService)(i0.ɵɵinject(i1.HttpClient));\n};\nHttpService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: HttpService,\n  factory: HttpService.ɵfac,\n  providedIn: \"root\"\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}